#summary Installation of the MxUpdate Update Deployment Tool.
#labels Phase-Deploy,Featured

<wiki:toc max_depth="3"/>

----

= Installation =
[http://code.google.com/p/mxupdate/downloads/list Download] and uncompress the !MxUpdate Update deployment tool. E.g. the tool is unpacked into directory {{{C:\project\MxUpdate\}}}.

Start MQL.

Define the MQL environment variable *{{{MXUPDATE_PATH}}}* to the path where the *{{{MxInstall.mql}}}* file is located. E.g.
{{{
set env MXUPDATE_PATH C:\project\MxUpdate\
}}}
If some additional properties must be defined, the MQL environment variable *{{{MXUPDATE_MAPPING_FILE}}}* could be defined. The value is the path of the file which defines the additional properties. E.g.
{{{
set env MXUPDATE_MAPPING_FILE C:\project\MyProjectSettings.properties
}}}
Run MQL script *{{{MxInstall.mql}}}*.
{{{
run C:\project\MxUpdate\MxInstall.mql
}}}
Then the !MxUpdate Update deployment tool is installed and all !MxUpdate JPOs are compiled. The tool could be tested:
{{{
exec prog MxUpdate --help
}}}
The short help for all parameters of !MxUpdate is shown.

----

= Installation FAQ =

== Alternatives to Manually Downloads ==

=== Using SVN External Link ===
Instead of manually downloading the !MxUpdate Update deployment tool, an external link could be defined if [http://subversion.tigris.org/ Subversion] is used. E.g. following property entry "{{{svn:externals}}}" for a directory must be defined to reference version 0.3.0:
{{{
source http://mxupdate.googlecode.com/svn/mxupdate-update/tags/V0.5.0
}}}
Because for [UpdateDevelopment development] another directory structure is used, the {{{MXUPDATE_PATH}}} must set to the {{{src/main}}} directory. The *{{{MxInstall.mql}}}* is located in {{{src/main/resources}}} sub path. The Script itself checks that a development structure is defined and installs !MxUpdate Update depending on this directory structure. 

== Support of old MX versions ==

=== Dimensions ===
If the used MX version within the project does not support the configuration item "[CI_DMDimensions Dimension]" the parameter list of the type definition "Dimension" and type defintion groups "Admin" and "!DataModel" must be changed that they do not include definitions for the configuration item "[CI_DMDimensions Dimension]". Also the "extra" parameters for the [CI_DMDimensions dimensions] must be removed from the parameter list. So following lines must be added to the additional property file:
{{{
TypeDef.Dimension.ParameterList                     =
TypeDef.Dimension.ParameterListOpposite             =

TypeDefGroup.Admin.TypeDefList                      = IEFGlobalConfig,\
                                                      JPO,Program,\
                                                      AttributeBoolean,AttributeDate,AttributeInteger,AttributeReal,AttributeString,\
                                                      Expression,Format,NumberGenerator,ObjectGenerator,Policy,Relationship,Rule,Trigger,TriggerGroup,Type,\
                                                      Association,Group,Person,PersonAdmin,Role,\
                                                      Channel,Command,Form,Inquiry,Menu,Portal,Table

TypeDefGroup.DataModel.TypeDefList                  = AttributeBoolean,AttributeDate,AttributeInteger,AttributeReal,AttributeString,\
                                                      Expression,Format,NumberGenerator,ObjectGenerator,Policy,Relationship,Rule,Trigger,TriggerGroup,Type

ParameterDef.DMDimAllowRemoveUnit.ParameterList     =
ParameterDef.DMDimAllowUpdateDefUnit.ParameterList  =
ParameterDef.DMDimAllowUpdateUnitMult.ParameterList =
ParameterDef.DMDimAllowUpdateUnitOffs.ParameterList =
}}}
For a deeper explanation see key "[UpdatePropertyFileFormat_TypeDef TypeDef]" and key "[UpdatePropertyFileFormat_TypeDefGroup TypeDefGroup]" of the property file format. 

=== Relationship as from / to side for Relationships ===
If the used MX version within the project does not support the feature to use also relationships as from / to side the property "DMRelationSupportRelCons" must be changed and set to {{{false}}}. So following line must be added to the additional property file:
{{{
ParameterDef.DMRelationSupportRelCons.Default = false
}}}
The installed default value is {{{true}}}.

=== Role Types ===
If the used MX version within the project does not support the role type feature, property "!UserRoleSupportRoleType" must be changed and set to {{{false}}}. So following line must be added to the additional property file:
{{{
ParameterDef.UserRoleSupportRoleType.Default = false
}}}
The installed default value is {{{true}}}.

== Support of emxGerLibUpdate ==

=== Use !MxUpdate Update together with emxGerLibUpdate ===
"!MxUpdate Update" and "emxGerLibUpdate" could be used together within one installation. The recommendation is to use only one tool.

The Tool "emxGerLibUpdate" uses and installs other attribute and type names to handle administration objects which are business objects. For attributes this belongs to the author, installed date and version. For types it is the process type (which is called in !MxUpdate [CI_DMTriggerGroups trigger group]). So following lines must be defined to use !MxUpdate Update and emxGerLibUpdate together in one environment:

{{{
# use attribute names from emxGerLibUpdate
PropertyDef.Author.AttributeName        = emxGerLibUpdateAuthor
PropertyDef.InstalledDate.AttributeName = emxGerLibUpdateInstalledDate
PropertyDef.Version.AttributeName       = emxGerLibUpdateVersion

# emxGerLibUpdate calls trigger group "Process"
TypeDef.TriggerGroup.BusPolicy          = emxGerLibUpdateProcess
TypeDef.TriggerGroup.BusRelsBoth        = emxGerLibUpdateSubProcess
TypeDef.TriggerGroup.BusType            = emxGerLibUpdateProcess
TypeDef.TriggerGroup.FilePath           = datamodel/process
TypeDef.TriggerGroup.FilePrefix         = PROCESS_
TypeDef.TriggerGroup.TextLogging        = process
TypeDef.TriggerGroup.TextTitle          = PROCESS
TypeDef.TriggerGroup.ParameterDesc      = Export / Import of processes.
TypeDef.TriggerGroup.ParameterList      = process
}}}
For a deeper explanation see key "[UpdatePropertyFileFormat_TypeDef TypeDef]" and key "[UpdatePropertyFileFormat_PropertyDef PropertyDef]" of the property file format. 

